// effect ask('a) {
//     val ask : fn() `a 'a
// }

type list('a) = 
    | nil
    | cons ('a, list('a))
    
let `|>` = fun(x, f) -> f(x) end

let map = fun(list, mapper) -> match list {
    | .nil -> .nil
    | .cons(x, xs) ->
        .cons(mapper(x), map(xs, mapper) )
} 
end

external `+`(int, int): ` b int = "kyoumi_int_add"


let main : $(`a & `b) int = 
    let open Effect in
    let open Operator in
    let x = `+`(10, 20) in
    let asked = &.ask() in
    10